
#include <16F886.h>
#device ADC=10 *=16  
#FUSES NOWDT                    //No Watch Dog Timer
#FUSES PUT                      //Power Up Timer
#FUSES NOMCLR                   //Master Clear pin not enabled
#FUSES NOPROTECT                //Code not protected from reading
#FUSES NOCPD                    //No EE protection
#FUSES BROWNOUT                 //Brownout reset
#FUSES IESO                     //Internal External SWITCH Over mode enabled
#FUSES FCMEN                    //Fail-safe clock monitor enabled
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used FOR I/O
#FUSES NODEBUG                  //No Debug mode FOR ICD
#FUSES NOWRT                    //Program memory not write protected
#FUSES BORV40                   //Brownout reset at 4.0V
#FUSES RESERVED                 //Used to set the reserved FUSE bits
#FUSES INTRC_IO 
#include <stdio.h> 
#include <string.h>
#use delay(clock=8M)
#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8)
//!#include<string.h>
char text[50];
int F=500;
void decToBinary(int n) 
{ 
     int  c, k;
    for (c = 8; c > 0; c--)
  {
    k = n >> (c-1);
 
    if (k & 1){
      printf("1\n");
      output_high(PIN_B6);}
    else{
      printf("0\n");
      output_low(PIN_B6);
    }
      delay_ms(500);
  }
  printf("\n");
}
void main(){
   delay_ms(2000);
   printf("Program started!\n");
   delay_ms(1000);
   printf("Input Frequency:\n");
   scanf("%d",&F);
   while(1){
    printf("Input:\n");
  gets(text); 
   int length=strlen(text);
   int i;
   delay_ms(1000);
   printf("Text length is %d \n",length);
   delay_ms(1000);
   printf("%s Frequency is %d\n",text,F);
      for (i = 0; i < length; i++)
      {
         printf ("%c = \n", text[i]);
         decToBinary((int)text[i]);
      }
   }

}
